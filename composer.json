{
    "name": "atlance/http-doctrine-dbal-filter",
    "description": "dbal dynamic filter from http query",
    "license": "MIT",
    "type": "library",
    "keywords": [
        "filter",
        "doctrine-dbal",
        "doctrine dbal dynamic filter"
    ],
    "authors": [
        {
            "name": "Anton Stepanov",
            "email": "lanposts@gmail.com"
        }
    ],
    "homepage": "https://github.com/atlance/http-doctrine-dbal-filter",
    "require": {
        "php": "^8.1",
        "doctrine/dbal": "^2.7",
        "psr/simple-cache": "^3.0",
        "webmozart/assert": "^1.9"
    },
    "require-dev": {
        "ext-curl": "*",
        "ext-dom": "*",
        "ext-memcached": "*",
        "ext-sqlite3": "*",
        "brianium/paratest": "^7.2",
        "ergebnis/composer-normalize": "^2.37",
        "phpstan/extension-installer": "^1.3",
        "phpstan/phpstan": "^1.10",
        "phpstan/phpstan-deprecation-rules": "^1.1",
        "phpstan/phpstan-phpunit": "^1.3",
        "phpstan/phpstan-strict-rules": "^1.5",
        "rector/rector": "^0.18.5",
        "symfony/cache": "^6.3",
        "vimeo/psalm": "^5.15"
    },
    "autoload": {
        "psr-4": {
            "Atlance\\HttpDbalFilter\\": "src"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Atlance\\HttpDbalFilter\\Test\\": "tests"
        }
    },
    "config": {
        "allow-plugins": {
            "phpstan/extension-installer": true,
            "ergebnis/composer-normalize": true
        },
        "optimize-autoloader": true,
        "preferred-install": {
            "*": "dist"
        },
        "process-timeout": 0,
        "sort-packages": true
    },
    "scripts": {
        "all": [
            "@test",
            "@php-analyze"
        ],
        "php-analyze": [
            "@phpstan",
            "@psalm"
        ],
        "phpstan": "vendor/bin/phpstan analyse -c phpstan.neon --level max --no-progress --memory-limit=-1",
        "psalm": "vendor/bin/psalm --shepherd",
        "rector": "vendor/bin/rector process src",
        "test": "XDEBUG_MODE=coverage vendor/bin/paratest -c phpunit.xml.dist --colors --runner=WrapperRunner"
    }
}
